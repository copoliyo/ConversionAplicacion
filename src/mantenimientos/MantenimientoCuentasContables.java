/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mantenimientos;

import general.DatosComunes;
import indices.IndiceCuentas;
import java.awt.Component;
import java.awt.Container;
import java.awt.FocusTraversalPolicy;
import java.util.Vector;
import javax.swing.JOptionPane;
import tablas.Cuenta;
import util.Apariencia;
import util.BaseDatos;

/**
 *
 * @author Txus
 */
public class MantenimientoCuentasContables extends util.EscapeDialog {
    
    private IndiceCuentas indiceCuentas;
    private Cuenta cuenta;

    /**
     * Creates new form MantenimientoCuentasContables
     */
    public MantenimientoCuentasContables(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        cargaInicial();
        
        
        Vector<Component> order;
        order = new Vector<>(4);
        order.add(jtfnfCuenta);
        order.add(jtffTitulo);
        order.add(jtfnfCentro);
        order.add(jcbActivado);
        MyOFocusTraversalPolicy newPolicy = new MyOFocusTraversalPolicy(order);
        this.setFocusTraversalPolicy(newPolicy);
        
        this.setVisible(true);
    }
    
    private void borrarPantalla(){
        jtfnfCuenta.setText("0");
        jtffTitulo.setText("");
        jtfnfCentro.setText(String.valueOf(DatosComunes.centroCont));
        jcbActivado.setSelected(true);
    }
    
    private void cargaInicial(){
        borrarPantalla();
        
        cuenta = new Cuenta();
        
        String strSql = "SELECT * FROM CONTAB WHERE EMPRESA = '" + DatosComunes.eEmpresa + "' AND "
                      + "CONTAB_CENTRO = " + DatosComunes.centroCont + " "
                      + "ORDER BY CONTAB_CUENTA ASC, CONTAB_GRADO ASC LIMIT 1";
        
        cuenta.read(strSql);
        
        cargaDatos(cuenta);
        
        // Comprobamos si tiene las cuentas superiores para no permitir crear 
        // una cuenta de grado inferior sin cuentas superiores.
        if(Integer.valueOf(cuenta.getGrado()) > 1)
            if(cuenta.existenCuentasSuperiores(cuenta.getCuenta()) == false)
                Apariencia.mensajeInformativo(4, "<center>Faltan cuentas superiores!!!<br>Crear cuentas supeirores primero!!!</center>");
    }

    private void cargaDatos(Cuenta c){
        jtfnfCuenta.setText(c.getCuenta());
        jtffTitulo.setText(c.getTitulo());
        jtfnfCentro.setText(String.valueOf(c.getCentro()));
        if(c.getActivo() == 1)
            jcbActivado.setSelected(true);
        else
            jcbActivado.setSelected(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlCodigo = new javax.swing.JLabel();
        jlTitulo = new javax.swing.JLabel();
        jbBuscarCuenta = new javax.swing.JButton();
        jtfnfCuenta = new util.JTextFieldNumeroFijo(9);
        jlCentro = new javax.swing.JLabel();
        jtfnfCentro = new util.JTextFieldNumeroFijo(3);
        jcbActivado = new javax.swing.JCheckBox();
        jtffTitulo = new util.JTextFieldFijo(30);
        jbSalir = new javax.swing.JButton();
        jbPresupuesto = new javax.swing.JButton();
        jbBorrar = new javax.swing.JButton();
        jbGrabar = new javax.swing.JButton();
        jbAtras = new javax.swing.JButton();
        jbAdelante = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Mantenimiento Cuentas Contables");

        jlCodigo.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jlCodigo.setText("Código");

        jlTitulo.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jlTitulo.setText("Título");

        jbBuscarCuenta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/BUSCAR.gif"))); // NOI18N
        jbBuscarCuenta.setPreferredSize(new java.awt.Dimension(30, 30));
        jbBuscarCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarCuentaActionPerformed(evt);
            }
        });

        jtfnfCuenta.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jtfnfCuenta.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfnfCuentaFocusLost(evt);
            }
        });
        jtfnfCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfnfCuentaActionPerformed(evt);
            }
        });

        jlCentro.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jlCentro.setText("Centro");

        jtfnfCentro.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N

        jcbActivado.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jcbActivado.setText("Activado");

        jtffTitulo.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N

        jbSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/SALIR.gif"))); // NOI18N
        jbSalir.setPreferredSize(new java.awt.Dimension(30, 30));
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jbPresupuesto.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jbPresupuesto.setText("Presupuesto");

        jbBorrar.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jbBorrar.setText("Borrar");
        jbBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBorrarActionPerformed(evt);
            }
        });

        jbGrabar.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jbGrabar.setText("Grabar");
        jbGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGrabarActionPerformed(evt);
            }
        });

        jbAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Atras.gif"))); // NOI18N
        jbAtras.setPreferredSize(new java.awt.Dimension(30, 30));
        jbAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAtrasActionPerformed(evt);
            }
        });

        jbAdelante.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Adelante.gif"))); // NOI18N
        jbAdelante.setPreferredSize(new java.awt.Dimension(30, 30));
        jbAdelante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAdelanteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlTitulo)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlCodigo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbBuscarCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jtfnfCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(67, 67, 67)
                                .addComponent(jlCentro)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfnfCentro, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55)
                                .addComponent(jcbActivado))
                            .addComponent(jtffTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbPresupuesto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbBorrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbGrabar)
                        .addGap(18, 18, 18)
                        .addComponent(jbAtras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbAdelante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlCodigo)
                    .addComponent(jbBuscarCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfnfCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlCentro)
                    .addComponent(jtfnfCentro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbActivado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlTitulo)
                    .addComponent(jtffTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbPresupuesto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbGrabar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAtras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAdelante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jbBuscarCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarCuentaActionPerformed
        
        if(indiceCuentas == null)
            indiceCuentas = new IndiceCuentas();
        else{
            indiceCuentas.recargarTabla();
            indiceCuentas.setVisible(true);
        }
        
        // El indice de cuentas devuelve "" si hemos salido pulsando ESCAPE
        if(indiceCuentas.getCuenta().length() > 1){
            cuenta.read(indiceCuentas.getCuenta(), DatosComunes.centroCont);
            cargaDatos(cuenta);
        }
    }//GEN-LAST:event_jbBuscarCuentaActionPerformed

    private void jbAdelanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAdelanteActionPerformed

        String strSql = "SELECT * FROM CONTAB WHERE EMPRESA = '" + DatosComunes.eEmpresa + "' AND "
                + "CONTAB_CENTRO = " + DatosComunes.centroCont + " AND "
                + "CONTAB_CUENTA > '" + jtfnfCuenta.getText().trim() + "' "
                + "ORDER BY CONTAB_CUENTA ASC, CONTAB_GRADO ASC LIMIT 1";

        if (cuenta.read(strSql) > 0) {
            cargaDatos(cuenta);
        }    
    }//GEN-LAST:event_jbAdelanteActionPerformed

    private void jbAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAtrasActionPerformed

        String strSql = "SELECT * FROM CONTAB WHERE EMPRESA = '" + DatosComunes.eEmpresa + "' AND "
                + "CONTAB_CENTRO = " + DatosComunes.centroCont + " AND "
                + "CONTAB_CUENTA < '" + jtfnfCuenta.getText().trim() + "' "
                + "ORDER BY CONTAB_CUENTA DESC, CONTAB_GRADO DESC LIMIT 1";

        if (cuenta.read(strSql) > 0) {
            cargaDatos(cuenta);
        }
    }//GEN-LAST:event_jbAtrasActionPerformed

    private void jbGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGrabarActionPerformed

        int codigoCuenta, digitosCuenta;
        String tituloCuenta;

        if (jtfnfCuenta.getText().trim().length() == 0) {
            codigoCuenta = 0;
            digitosCuenta = 0;
        } else {
            codigoCuenta = Integer.valueOf(jtfnfCuenta.getText().trim());
            digitosCuenta = jtfnfCuenta.getText().trim().length();
        }

        tituloCuenta = jtffTitulo.getText().trim();

        if (codigoCuenta > 0) {
            if (cuenta.getExtenOtroFichero() == 0) {
                if (tituloCuenta.length() > 0) {
                    if (cuenta.existenCuentasSuperiores(String.valueOf(codigoCuenta)) == true) {
                        cuenta.setEmpresa(DatosComunes.eEmpresa);
                        cuenta.setCentro(DatosComunes.centroCont);
                        cuenta.setCuenta(String.valueOf(codigoCuenta));
                        cuenta.setTitulo(tituloCuenta);
                        if (jcbActivado.isSelected() == true) {
                            cuenta.setActivo(1);
                        } else {
                            cuenta.setActivo(0);
                        }
                        // Cuenta de tercer grado
                        if (digitosCuenta > 5) {
                            cuenta.setGrado("3");
                        } // Ya sólo puede ser de primer o segundo grados
                        else // > 3 y <= 5  -> segundo grado
                        if (digitosCuenta > 3) {
                            cuenta.setGrado("2");
                        } else // <= 3  -> primer grado
                        {
                            cuenta.setGrado("1");
                        }
                        if (cuenta.write() == true) {
                            Apariencia.mensajeInformativo(4, "Cuenta grabada correctamente.");
                        } else {
                            Apariencia.mensajeInformativo(4, "Error al grabar la cuenta!!!");
                        }
                    } else {
                        Apariencia.mensajeInformativo(4, "<center>No existen cuentas superiores!!!<br>No se graba.</center>");
                    }
                } else {
                    Apariencia.mensajeInformativo(4, "No se puede grabar sin título!!!");
                }
            } else {
                switch (cuenta.getExtenOtroFichero()) {
                    case 1:
                        Apariencia.mensajeInformativo(4, "Con el Mantenimiento de Clientes!!!");
                        break;
                    case 2:
                        Apariencia.mensajeInformativo(4, "Con el Mantenimiento de Proveedores/Acreedores!!!");
                        break;
                    case 3:
                        Apariencia.mensajeInformativo(4, "Con el Mantenimiento de Representantes!!!");
                        break;
                    case 4:
                        Apariencia.mensajeInformativo(4, "Con el Mantenimiento de Bancos!!!");
                        break;
                }
            }
        } else {
            Apariencia.mensajeInformativo(4, "Hay que poner un código de Cuenta válido!!!");
        }
    }//GEN-LAST:event_jbGrabarActionPerformed

    private void jbBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBorrarActionPerformed

        boolean okParaBorrar = true;
        int grado = Integer.valueOf(cuenta.getGrado());
        String strSql;

        // Comprobamos la extensión en otro fichero.
        if (cuenta.getExtenOtroFichero() != 0) {
            okParaBorrar = false;
            Apariencia.mensajeInformativo(4, "<center>Tiene extensión de fichero especial.<br>No se borra!!!</center>");
        }

        // Comprobamos si existen cuentas que cuelguen de esta
        if (grado == 1 || grado == 2) {
            strSql = "SELECT * FROM CONTAB WHERE EMPRESA = '" + DatosComunes.eEmpresa + "' AND "
                    + "CONTAB_CENTRO = " + DatosComunes.centroCont + " AND "
                    + "CONTAB_GRADO > '" + grado + "' AND "
                    + "CONTAB_CUENTA LIKE '" + jtfnfCuenta.getText().trim() + "%' "
                    + "ORDER BY CONTAB_CUENTA ASC, CONTAB_GRADO ASC";

            if (BaseDatos.countRows(strSql) > 1) {
                okParaBorrar = false;
                Apariencia.mensajeInformativo(4, "<center>No se puede borrar!!!<br>Existen mas cuentas que cuelgan de esta.</center>");
            }
        }

        if (okParaBorrar == true) {
            // Damos la oportunidad de no borrar
            Object[] opciones = {"Si", "No"};

            int n = JOptionPane.showOptionDialog(this,
                    "<html><font size='4'><strong>"
                    + "Desea borrar la cuenta<br>"
                    + "Código : " + cuenta.getCuenta() + "<br>"
                    + "Título : " + cuenta.getTitulo(),
                    "Borrar Cuenta Contable",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null, // Sin Icono personalizado.
                    opciones, // Título de los botonoes
                    opciones[1]); // Botón por defecto.
            //Si
            if (n == 0) {
                if (cuenta.delete(cuenta.getCuenta(), DatosComunes.centroCont) > 0) {
                    Apariencia.mensajeInformativo(4, "Cuenta borrada correctamente.");
                    strSql = "SELECT * FROM CONTAB WHERE EMPRESA = '" + DatosComunes.eEmpresa + "' AND "
                            + "CONTAB_CENTRO = " + DatosComunes.centroCont + " AND "
                            + "CONTAB_CUENTA > '" + jtfnfCuenta.getText().trim() + "' "
                            + "ORDER BY CONTAB_CUENTA ASC, CONTAB_GRADO ASC LIMIT 1";

                    if (cuenta.read(strSql) > 0) {
                        cargaDatos(cuenta);
                    }

                } else {
                    Apariencia.mensajeInformativo(4, "No se ha podido borrar la Cuenta!!!.");
                }
            }
        }
    }//GEN-LAST:event_jbBorrarActionPerformed

    private void jtfnfCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfnfCuentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfnfCuentaActionPerformed

    private void jtfnfCuentaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfnfCuentaFocusLost
        
        String strSql = "SELECT * FROM CONTAB WHERE EMPRESA = '" + DatosComunes.eEmpresa + "' AND "
                + "CONTAB_CENTRO = " + DatosComunes.centroCont + " AND "
                + "CONTAB_CUENTA = '" + jtfnfCuenta.getText().trim() + "' "
                + "ORDER BY CONTAB_CUENTA ASC, CONTAB_GRADO ASC LIMIT 1";

        if (cuenta.read(strSql) > 0) {
            cargaDatos(cuenta);
        }else{
            cuenta = new Cuenta();
            cuenta.setEmpresa(DatosComunes.eEmpresa);
            cuenta.setCentro(DatosComunes.centroCont);
            cuenta.setExtenOtroFichero(0);
            cuenta.setActivo(1);
            cuenta.setCuenta(jtfnfCuenta.getText().trim());
            cuenta.setSaldo(0.0);
            cuenta.setSaldoUltimaDepuracion(0.0);
            cuenta.setTitulo("");
            
            int longitud = jtfnfCuenta.getText().trim().length();
            
            if(longitud > 5)
                cuenta.setGrado("3");
            else
                if(longitud == 4 || longitud == 5)
                    cuenta.setGrado("2");
                else
                    cuenta.setGrado("1");
            
            jtffTitulo.setText("");
        }

    }//GEN-LAST:event_jtfnfCuentaFocusLost
    
    
    
   public static class MyOFocusTraversalPolicy
            extends FocusTraversalPolicy {
 
        Vector<Component> order;
 
        public MyOFocusTraversalPolicy(Vector<Component> order) {
            this.order = new Vector<Component>(order.size());
            this.order.addAll(order);
        }
 
        public Component getComponentAfter(Container focusCycleRoot,
                Component aComponent) {
            int idx = (order.indexOf(aComponent) + 1) % order.size();
            return order.get(idx);
        }
 
        @Override
        public Component getComponentBefore(Container focusCycleRoot,
                Component aComponent) {
            int idx = order.indexOf(aComponent) - 1;
            if (idx < 0) {
                idx = order.size() - 1;
            }
            return order.get(idx);
        }
 
        public Component getDefaultComponent(Container focusCycleRoot) {
            return order.get(0);
        }
 
        public Component getLastComponent(Container focusCycleRoot) {
            return order.lastElement();
        }
 
        public Component getFirstComponent(Container focusCycleRoot) {
            return order.get(0);
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbAdelante;
    private javax.swing.JButton jbAtras;
    private javax.swing.JButton jbBorrar;
    private javax.swing.JButton jbBuscarCuenta;
    private javax.swing.JButton jbGrabar;
    private javax.swing.JButton jbPresupuesto;
    private javax.swing.JButton jbSalir;
    private javax.swing.JCheckBox jcbActivado;
    private javax.swing.JLabel jlCentro;
    private javax.swing.JLabel jlCodigo;
    private javax.swing.JLabel jlTitulo;
    private util.JTextFieldFijo jtffTitulo;
    private util.JTextFieldNumeroFijo jtfnfCentro;
    private util.JTextFieldNumeroFijo jtfnfCuenta;
    // End of variables declaration//GEN-END:variables
}
