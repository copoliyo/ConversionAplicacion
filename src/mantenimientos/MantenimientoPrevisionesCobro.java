/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mantenimientos;

import general.DatosComunes;
import general.MysqlConnect;
import indices.IndiceBancosSucursales;
import indices.IndiceClientesContables;
import indices.IndiceCodigosBanco;
import indices.IndicePrevisionesCobro;
import indices.IndiceRepresentantes;
import java.awt.Component;
import java.awt.Container;
import java.awt.FocusTraversalPolicy;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import tablas.Banco;
import tablas.ClienteContable;
import tablas.Cuenta;
import tablas.EfectoCobrar;
import tablas.IndiceBancos;
import tablas.Representante;
import util.Apariencia;
import util.BaseDatos;
import util.Cadena;
import util.CuentaBancaria;
import util.Fecha;

/**
 *
 * @author Txus
 */
public class MantenimientoPrevisionesCobro extends util.EscapeDialog {
    // Con esta variable definimos si estamos en una consulta (TRUE) o en
    // un mantenimiento (FALSE). Nos servirá para tener un sólo programa
    // para algunas Consultas/Mantenimientos que pueden compartir las 
    // mismas pantallas.

    private static boolean consulta;
    private static boolean enCreacion = false;

    public static ResultSet rs = null;
    public static MysqlConnect m = null;
   
    private static EfectoCobrar efectoCobrar = new EfectoCobrar();
    
    IndicePrevisionesCobro indicePrevisionesCobro = null;

    // Definiciones de componentes de pantalla
    public JFrame frameMenu = null;
        
   
    /**
     * Creates new form MantenimientoPrevisionesCobro
     */
    public MantenimientoPrevisionesCobro(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();        
    }
    
    public MantenimientoPrevisionesCobro(JFrame parentFrame) {
        super();
        frameMenu = parentFrame;
        initComponents();
        borrarPantalla();
        cargaInicial();
        this.setVisible(true);        
        
        // Establecemos el orden de los campos.
        Vector<Component> order = new Vector<Component>(18);
        order.add(jtffVencimiento);
        order.add(jtfnfEfecto);
        order.add(jcbxSituacion);
        order.add(jtfnfCentro);
        order.add(jtfnfCliente);
        order.add(jtfnfFactura);
        order.add(jtffFechaFactura);
        order.add(jtfnf2dImporte);
        order.add(jtfnfBancoNegociacion);
        order.add(jtffFechaRemesa);
        order.add(jtfnfRemesaDia);
        order.add(jtfnfRepresentante);
        order.add(jtfnfBancoDomiciliacion);
        order.add(jtfnfSucursalDomiciliacion);
        order.add(jtfnfDigitosControl);
        order.add(jtfnfCuentaDomiciliacion);
        order.add(jtffFechaCobro);
        order.add(jcbReciboEmitido);                
        MyOFocusTraversalPolicy newPolicy = new MyOFocusTraversalPolicy(order);
        this.setFocusTraversalPolicy(newPolicy);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlVencimiento = new javax.swing.JLabel();
        jbBuscarFechaVencimiento = new javax.swing.JButton();
        jlEfecto = new javax.swing.JLabel();
        jtfnfEfecto = new util.JTextFieldNumeroFijo(4);
        jlSituacion = new javax.swing.JLabel();
        jcbxSituacion = new javax.swing.JComboBox();
        jlCentro = new javax.swing.JLabel();
        jtfnfCentro = new util.JTextFieldNumeroFijo(3);
        jPanelDatosPrevision = new javax.swing.JPanel();
        jlCliente = new javax.swing.JLabel();
        jbBuscarCliente = new javax.swing.JButton();
        jtfnfCliente = new util.JTextFieldNumeroFijo(9);
        jlFactura = new javax.swing.JLabel();
        jtfnfFactura = new util.JTextFieldNumeroFijo(6);
        jlFechaFactura = new javax.swing.JLabel();
        jlImporte = new javax.swing.JLabel();
        jlBancoNegociacion = new javax.swing.JLabel();
        jbBuscarBancoNegociacion = new javax.swing.JButton();
        jtfnfBancoNegociacion = new util.JTextFieldNumeroFijo(4);
        jlFechaRemesa = new javax.swing.JLabel();
        jlRemesaDia = new javax.swing.JLabel();
        jtfnfRemesaDia = new util.JTextFieldNumeroFijo(2);
        jlRepresentante = new javax.swing.JLabel();
        jbBuscarRepresentante = new javax.swing.JButton();
        jtfnfRepresentante = new util.JTextFieldNumeroFijo(4);
        jPanelDatosDomiciliacion = new javax.swing.JPanel();
        jlBancoDomiciliacion = new javax.swing.JLabel();
        jtfnfBancoDomiciliacion = new util.JTextFieldNumeroFijo(4);
        jbBuscarBancoDomiciliacion = new javax.swing.JButton();
        jlSucursalDomiciliacion = new javax.swing.JLabel();
        jbBuscarSucursalDomiciliacion = new javax.swing.JButton();
        jtfnfSucursalDomiciliacion = new javax.swing.JTextField();
        jtfnfDigitosControl = new util.JTextFieldNumeroFijo(2);
        jlDigitosControl = new javax.swing.JLabel();
        jtfnfCuentaDomiciliacion = new util.JTextFieldNumeroFijo(10);
        jlCuentaDomiciliacion = new javax.swing.JLabel();
        jlNombreBancoDomiciliacion = new javax.swing.JLabel();
        jlNombreSucursalDomiciliacion = new javax.swing.JLabel();
        jlFechaCobro = new javax.swing.JLabel();
        jcbReciboEmitido = new javax.swing.JCheckBox();
        jlNombreCliente = new javax.swing.JLabel();
        jlNombreRepresentante = new javax.swing.JLabel();
        jtffFechaFactura = new util.JTextFieldFecha();
        jtffFechaRemesa = new util.JTextFieldFecha();
        jtffFechaCobro = new util.JTextFieldFecha();
        jlNombreBancoNegociacion = new javax.swing.JLabel();
        jtfnf2dImporte = new util.JTextFieldNumero2Decimales();
        jbSalir = new javax.swing.JButton();
        jbDeduccionAbonos = new javax.swing.JButton();
        jbDepuracionRiesgo = new javax.swing.JButton();
        jbBorrar = new javax.swing.JButton();
        jbGrabar = new javax.swing.JButton();
        jbAtras = new javax.swing.JButton();
        jbAdelante = new javax.swing.JButton();
        jbNuevo = new javax.swing.JButton();
        jtffVencimiento = new util.JTextFieldFecha();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Mantenimiento Previsiones de Cobro");

        jlVencimiento.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jlVencimiento.setText("Vencimiento");

        jbBuscarFechaVencimiento.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jbBuscarFechaVencimiento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/BUSCAR.gif"))); // NOI18N
        jbBuscarFechaVencimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarFechaVencimientoActionPerformed(evt);
            }
        });

        jlEfecto.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jlEfecto.setText("Efecto");

        jtfnfEfecto.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jtfnfEfecto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfnfEfectoFocusLost(evt);
            }
        });
        jtfnfEfecto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfnfEfectoActionPerformed(evt);
            }
        });

        jlSituacion.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jlSituacion.setText("Situación");

        jcbxSituacion.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jcbxSituacion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Recibo", "Negociable", "Liberado", "Remesado", "Aceptado", "Cobrado" }));

        jlCentro.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jlCentro.setText("Centro");

        jtfnfCentro.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jtfnfCentro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfnfCentroFocusLost(evt);
            }
        });

        jPanelDatosPrevision.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos Previsión", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("MS Reference Sans Serif", 1, 14), new java.awt.Color(51, 51, 255))); // NOI18N
        jPanelDatosPrevision.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N

        jlCliente.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jlCliente.setText("Cliente");

        jbBuscarCliente.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jbBuscarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/BUSCAR.gif"))); // NOI18N
        jbBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarClienteActionPerformed(evt);
            }
        });

        jtfnfCliente.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jtfnfCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfnfClienteFocusLost(evt);
            }
        });

        jlFactura.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jlFactura.setText("Factura");

        jtfnfFactura.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N

        jlFechaFactura.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jlFechaFactura.setText("Fecha Factura");

        jlImporte.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jlImporte.setText("Importe");

        jlBancoNegociacion.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jlBancoNegociacion.setText("Banco Negoc.");

        jbBuscarBancoNegociacion.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jbBuscarBancoNegociacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/BUSCAR.gif"))); // NOI18N
        jbBuscarBancoNegociacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarBancoNegociacionActionPerformed(evt);
            }
        });

        jtfnfBancoNegociacion.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N

        jlFechaRemesa.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jlFechaRemesa.setText("Fecha Remesa");

        jlRemesaDia.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jlRemesaDia.setText("Remesa Dia");

        jtfnfRemesaDia.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N

        jlRepresentante.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jlRepresentante.setText("Representante");

        jbBuscarRepresentante.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jbBuscarRepresentante.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/BUSCAR.gif"))); // NOI18N
        jbBuscarRepresentante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarRepresentanteActionPerformed(evt);
            }
        });

        jtfnfRepresentante.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N

        jPanelDatosDomiciliacion.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Domiciliación", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("MS Reference Sans Serif", 1, 14), new java.awt.Color(0, 0, 255))); // NOI18N

        jlBancoDomiciliacion.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jlBancoDomiciliacion.setText("Banco");

        jtfnfBancoDomiciliacion.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N

        jbBuscarBancoDomiciliacion.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jbBuscarBancoDomiciliacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/BUSCAR.gif"))); // NOI18N
        jbBuscarBancoDomiciliacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarBancoDomiciliacionActionPerformed(evt);
            }
        });

        jlSucursalDomiciliacion.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jlSucursalDomiciliacion.setText("Sucursal");

        jbBuscarSucursalDomiciliacion.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jbBuscarSucursalDomiciliacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/BUSCAR.gif"))); // NOI18N
        jbBuscarSucursalDomiciliacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarSucursalDomiciliacionActionPerformed(evt);
            }
        });

        jtfnfSucursalDomiciliacion.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N

        jtfnfDigitosControl.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N

        jlDigitosControl.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jlDigitosControl.setText("DC");

        jtfnfCuentaDomiciliacion.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jtfnfCuentaDomiciliacion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfnfCuentaDomiciliacionFocusLost(evt);
            }
        });

        jlCuentaDomiciliacion.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jlCuentaDomiciliacion.setText("Cuenta");

        jlNombreBancoDomiciliacion.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N

        jlNombreSucursalDomiciliacion.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanelDatosDomiciliacionLayout = new javax.swing.GroupLayout(jPanelDatosDomiciliacion);
        jPanelDatosDomiciliacion.setLayout(jPanelDatosDomiciliacionLayout);
        jPanelDatosDomiciliacionLayout.setHorizontalGroup(
            jPanelDatosDomiciliacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosDomiciliacionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDatosDomiciliacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDatosDomiciliacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanelDatosDomiciliacionLayout.createSequentialGroup()
                            .addComponent(jlSucursalDomiciliacion)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jbBuscarSucursalDomiciliacion, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanelDatosDomiciliacionLayout.createSequentialGroup()
                            .addComponent(jlBancoDomiciliacion)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbBuscarBancoDomiciliacion, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jlDigitosControl))
                .addGap(18, 18, 18)
                .addGroup(jPanelDatosDomiciliacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfnfDigitosControl, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelDatosDomiciliacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jtfnfBancoDomiciliacion, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                        .addComponent(jtfnfSucursalDomiciliacion)))
                .addGroup(jPanelDatosDomiciliacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDatosDomiciliacionLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jlCuentaDomiciliacion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtfnfCuentaDomiciliacion, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelDatosDomiciliacionLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanelDatosDomiciliacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlNombreSucursalDomiciliacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlNombreBancoDomiciliacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(16, 16, 16))
        );
        jPanelDatosDomiciliacionLayout.setVerticalGroup(
            jPanelDatosDomiciliacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosDomiciliacionLayout.createSequentialGroup()
                .addGroup(jPanelDatosDomiciliacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDatosDomiciliacionLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jlBancoDomiciliacion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jlSucursalDomiciliacion))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosDomiciliacionLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanelDatosDomiciliacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jbBuscarBancoDomiciliacion, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelDatosDomiciliacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jtfnfBancoDomiciliacion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jlNombreBancoDomiciliacion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelDatosDomiciliacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jbBuscarSucursalDomiciliacion, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfnfSucursalDomiciliacion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlNombreSucursalDomiciliacion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelDatosDomiciliacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDatosDomiciliacionLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jlDigitosControl))
                    .addGroup(jPanelDatosDomiciliacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jtfnfCuentaDomiciliacion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jlCuentaDomiciliacion))
                    .addComponent(jtfnfDigitosControl, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jlFechaCobro.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jlFechaCobro.setText("Fecha Cobro");

        jcbReciboEmitido.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jcbReciboEmitido.setText("Recibo Emitido");

        jlNombreCliente.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N

        jlNombreRepresentante.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N

        jtffFechaFactura.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N

        jtffFechaRemesa.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N

        jtffFechaCobro.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jtffFechaCobro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtffFechaCobroActionPerformed(evt);
            }
        });

        jlNombreBancoNegociacion.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N

        jtfnf2dImporte.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanelDatosPrevisionLayout = new javax.swing.GroupLayout(jPanelDatosPrevision);
        jPanelDatosPrevision.setLayout(jPanelDatosPrevisionLayout);
        jPanelDatosPrevisionLayout.setHorizontalGroup(
            jPanelDatosPrevisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosPrevisionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDatosPrevisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDatosPrevisionLayout.createSequentialGroup()
                        .addComponent(jlRemesaDia)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelDatosPrevisionLayout.createSequentialGroup()
                        .addComponent(jlRepresentante)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbBuscarRepresentante, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelDatosPrevisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfnfRemesaDia, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelDatosPrevisionLayout.createSequentialGroup()
                                .addComponent(jtfnfRepresentante, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jlNombreRepresentante, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanelDatosPrevisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDatosPrevisionLayout.createSequentialGroup()
                                .addComponent(jlFechaCobro)
                                .addGap(18, 18, 18)
                                .addComponent(jtffFechaCobro, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jcbReciboEmitido))
                        .addGap(27, 27, 27))
                    .addGroup(jPanelDatosPrevisionLayout.createSequentialGroup()
                        .addGroup(jPanelDatosPrevisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDatosPrevisionLayout.createSequentialGroup()
                                .addComponent(jlCliente)
                                .addGap(18, 18, 18)
                                .addComponent(jbBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jlFactura)
                            .addComponent(jlFechaFactura)
                            .addComponent(jlImporte)
                            .addComponent(jlFechaRemesa)
                            .addComponent(jlBancoNegociacion))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelDatosPrevisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtfnfCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                            .addComponent(jtffFechaFactura, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanelDatosPrevisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jtffFechaRemesa, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanelDatosPrevisionLayout.createSequentialGroup()
                                    .addComponent(jtfnfFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(14, 14, 14)))
                            .addGroup(jPanelDatosPrevisionLayout.createSequentialGroup()
                                .addComponent(jbBuscarBancoNegociacion, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jtfnfBancoNegociacion, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jtfnf2dImporte, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanelDatosPrevisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDatosPrevisionLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanelDatosPrevisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlNombreCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanelDatosPrevisionLayout.createSequentialGroup()
                                        .addComponent(jlNombreBancoNegociacion, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosPrevisionLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                                .addComponent(jPanelDatosDomiciliacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48))))))
        );
        jPanelDatosPrevisionLayout.setVerticalGroup(
            jPanelDatosPrevisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosPrevisionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDatosPrevisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelDatosPrevisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jlCliente)
                        .addComponent(jbBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jtfnfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelDatosPrevisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelDatosPrevisionLayout.createSequentialGroup()
                        .addComponent(jPanelDatosDomiciliacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jlNombreBancoNegociacion, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58))
                    .addGroup(jPanelDatosPrevisionLayout.createSequentialGroup()
                        .addGroup(jPanelDatosPrevisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jlBancoNegociacion)
                            .addComponent(jbBuscarBancoNegociacion, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelDatosPrevisionLayout.createSequentialGroup()
                                .addGroup(jPanelDatosPrevisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jtfnfFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jlFactura))
                                .addGap(13, 13, 13)
                                .addGroup(jPanelDatosPrevisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jlFechaFactura)
                                    .addComponent(jtffFechaFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanelDatosPrevisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jlImporte)
                                    .addComponent(jtfnf2dImporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(101, 101, 101)
                                .addComponent(jtfnfBancoNegociacion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelDatosPrevisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtffFechaRemesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlFechaRemesa))
                        .addGap(18, 18, 18)))
                .addGroup(jPanelDatosPrevisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDatosPrevisionLayout.createSequentialGroup()
                        .addGroup(jPanelDatosPrevisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlRemesaDia)
                            .addComponent(jtfnfRemesaDia, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(jPanelDatosPrevisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelDatosPrevisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jlRepresentante)
                                .addComponent(jbBuscarRepresentante, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jtfnfRepresentante)
                            .addComponent(jlNombreRepresentante, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanelDatosPrevisionLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanelDatosPrevisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtffFechaCobro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlFechaCobro))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jcbReciboEmitido)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jbSalir.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jbSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/SALIR.gif"))); // NOI18N
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jbDeduccionAbonos.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jbDeduccionAbonos.setText("Deducc.Abonos");

        jbDepuracionRiesgo.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jbDepuracionRiesgo.setText("Depuración Riesgo");
        jbDepuracionRiesgo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDepuracionRiesgoActionPerformed(evt);
            }
        });

        jbBorrar.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jbBorrar.setText("Borrar");
        jbBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBorrarActionPerformed(evt);
            }
        });

        jbGrabar.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jbGrabar.setText("Grabar");
        jbGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGrabarActionPerformed(evt);
            }
        });

        jbAtras.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jbAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Atras.gif"))); // NOI18N
        jbAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAtrasActionPerformed(evt);
            }
        });

        jbAdelante.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jbAdelante.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Adelante.gif"))); // NOI18N
        jbAdelante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAdelanteActionPerformed(evt);
            }
        });

        jbNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Nuevo.gif"))); // NOI18N
        jbNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevoActionPerformed(evt);
            }
        });

        jtffVencimiento.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jtffVencimiento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtffVencimientoFocusLost(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlVencimiento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbBuscarFechaVencimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtffVencimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jlEfecto)
                        .addGap(18, 18, 18)
                        .addComponent(jtfnfEfecto, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jlSituacion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbxSituacion, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jlCentro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtfnfCentro, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbDeduccionAbonos)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jbDepuracionRiesgo)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jbBorrar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jbGrabar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jbAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jbAdelante, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jPanelDatosPrevision, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jlEfecto)
                                .addComponent(jtfnfEfecto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jlSituacion)
                                .addComponent(jcbxSituacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jlCentro)
                                .addComponent(jtfnfCentro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jlVencimiento)
                            .addComponent(jbBuscarFechaVencimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtffVencimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jbNuevo)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelDatosPrevision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbAdelante, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbGrabar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbDepuracionRiesgo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbDeduccionAbonos, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbBuscarRepresentanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarRepresentanteActionPerformed
        
        Representante representante = new Representante();
        int codigoRepresentante;
        
        IndiceRepresentantes ir = new IndiceRepresentantes();
                
        codigoRepresentante = ir.getRepresentante();
        representante = representante.read(DatosComunes.eEmpresa, DatosComunes.centroCont, codigoRepresentante);
        jtfnfRepresentante.setText(String.valueOf(codigoRepresentante));
        jlNombreRepresentante.setText(representante.getApellidosRazonSocial());
    }//GEN-LAST:event_jbBuscarRepresentanteActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        salir();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jbAdelanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAdelanteActionPerformed
        int fechaVencimiento = util.Cadena.cadenaAfecha(jtffVencimiento.getText().trim());
	int numeroEfecto = Integer.valueOf(jtfnfEfecto.getText());
        
        String strSql = "SELECT * FROM EFECOB WHERE EMPRESA = '" + DatosComunes.eEmpresa + "' ";
              //strSql += "AND EFECOB_CENTRO = " + jtfnfCentro.getText().trim() + " ";
              strSql += "AND EFECOB_VENCIM = " + fechaVencimiento + " ";
              strSql += "AND EFECOB_EFECTO > " + numeroEfecto + " ";
              strSql += "ORDER BY EFECOB_VENCIM, EFECOB_EFECTO LIMIT 1";
              
        if(BaseDatos.countRows(strSql) == 0){
            strSql = "SELECT * FROM EFECOB WHERE EMPRESA = '" + DatosComunes.eEmpresa + "' ";
            //strSql += "AND EFECOB_CENTRO = " + jtfnfCentro.getText().trim() + " ";
            strSql += "AND EFECOB_VENCIM > " + fechaVencimiento + " ";
            strSql += "ORDER BY EFECOB_VENCIM, EFECOB_EFECTO LIMIT 1";
        }
             
        //Apariencia.mensajeInformativo(5, strSql);
        if(BaseDatos.countRows(strSql) > 0)
            cargaDatos(strSql);
        
    }//GEN-LAST:event_jbAdelanteActionPerformed

    private void jbAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAtrasActionPerformed
        int fechaVencimiento = util.Cadena.cadenaAfecha(jtffVencimiento.getText().trim());
	int numeroEfecto = Integer.valueOf(jtfnfEfecto.getText());
        
        String strSql = "SELECT * FROM EFECOB WHERE EMPRESA = '" + DatosComunes.eEmpresa + "' ";
              //strSql += "AND EFECOB_CENTRO = " + jtfnfCentro.getText().trim() + " ";
              strSql += "AND EFECOB_VENCIM = " + fechaVencimiento + " ";
              strSql += "AND EFECOB_EFECTO < " + numeroEfecto + " ";
              strSql += "ORDER BY EFECOB_VENCIM DESC, EFECOB_EFECTO DESC LIMIT 1";
              
        if(BaseDatos.countRows(strSql) == 0){
            strSql = "SELECT * FROM EFECOB WHERE EMPRESA = '" + DatosComunes.eEmpresa + "' ";
            //strSql += "AND EFECOB_CENTRO = " + jtfnfCentro.getText().trim() + " ";
            strSql += "AND EFECOB_VENCIM < " + fechaVencimiento + " ";
            strSql += "ORDER BY EFECOB_VENCIM DESC, EFECOB_EFECTO DESC LIMIT 1";
        }
              
        //Apariencia.mensajeInformativo(5, strSql);
        if(BaseDatos.countRows(strSql) > 0)
            cargaDatos(strSql);
    }//GEN-LAST:event_jbAtrasActionPerformed

    private void jbBuscarFechaVencimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarFechaVencimientoActionPerformed
        if (indicePrevisionesCobro == null) {
            indicePrevisionesCobro = new IndicePrevisionesCobro();
        } else {
            indicePrevisionesCobro.muestra();
        }

        efectoCobrar = indicePrevisionesCobro.getEfectoCobrar();

        //cargaPorFechaYnumeroVencimiento(efectoCobrar.getVencimiento(), efectoCobrar.getEfecto());

    }//GEN-LAST:event_jbBuscarFechaVencimientoActionPerformed

    private void jbNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevoActionPerformed
        enCreacion = true;
        borrarPantalla();
    }//GEN-LAST:event_jbNuevoActionPerformed

    private void jbGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGrabarActionPerformed
        enCreacion = false;
        
        efectoCobrar.setEmpresa(DatosComunes.eEmpresa);
        efectoCobrar.setBanco(Integer.valueOf(jtfnfBancoNegociacion.getText().trim()));
        efectoCobrar.setFechaCobro(jtffFechaCobro.getFechaAAAAMMDD());
	efectoCobrar.setVencimiento(jtffVencimiento.getFechaAAAAMMDD());
        efectoCobrar.setEfecto(Integer.valueOf(jtfnfEfecto.getText().trim()));
        efectoCobrar.setCentro(Integer.valueOf(jtfnfCentro.getText().trim()));
	efectoCobrar.setSituacion(jcbxSituacion.getSelectedIndex());
        efectoCobrar.setFechaRemesa(jtffFechaRemesa.getFechaAAAAMMDD());
        efectoCobrar.setRemesa(Integer.valueOf(jtfnfRemesaDia.getText().trim()));
        efectoCobrar.setFactura(Integer.valueOf(jtfnfFactura.getText().trim()));
        efectoCobrar.setCuenta(jtfnfCliente.getText().trim());
        // fechaAsientoApunte
	// Que pasa si ya tenía una fecha/asiento/apunte
        // Hay que vaciar el Objeto EfectoCobrar al pinchar en 'Nuevo'
        // fechaEfecto - Lo mismo, pero no tiene sentido crear nuevos efectos aquí!!!
        // vencimientoDv
        efectoCobrar.setNumeroBanco(Integer.valueOf(jtfnfBancoDomiciliacion.getText().trim()));
	efectoCobrar.setNumeroSucursal(Integer.valueOf(jtfnfSucursalDomiciliacion.getText().trim()));
	efectoCobrar.setDigitosControl(Integer.valueOf(jtfnfDigitosControl.getText().trim()));
	efectoCobrar.setCuentaBancaria(Integer.valueOf(jtfnfCuentaDomiciliacion.getText().trim()));
	// timbres
        efectoCobrar.setFechaFactura(jtffFechaFactura.getFechaAAAAMMDD());
        efectoCobrar.setImporte(jtfnf2dImporte.getDouble());
	efectoCobrar.setRepresentante(Integer.valueOf(jtfnfRepresentante.getText().trim()));
	if(jcbReciboEmitido.isSelected())
            efectoCobrar.setReciboImpreso(1);
        else
            efectoCobrar.setReciboImpreso(0);
			
	// origen
        
        efectoCobrar.write();
    }//GEN-LAST:event_jbGrabarActionPerformed

    private void jtfnfEfectoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfnfEfectoActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jtfnfEfectoActionPerformed

    private void jtffVencimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtffVencimientoActionPerformed
        
    }//GEN-LAST:event_jtffVencimientoActionPerformed

    private void jtffVencimientoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtffVencimientoFocusLost
        
        cargaPorVencimientoEfectoCentro();        
    }//GEN-LAST:event_jtffVencimientoFocusLost

    private void jtffFechaCobroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtffFechaCobroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtffFechaCobroActionPerformed

    private void jtfnfEfectoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfnfEfectoFocusLost
        
        cargaPorVencimientoEfectoCentro();
    }//GEN-LAST:event_jtfnfEfectoFocusLost

    private void jtfnfCentroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfnfCentroFocusLost
        
        cargaPorVencimientoEfectoCentro();
    }//GEN-LAST:event_jtfnfCentroFocusLost

    private void jbBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarClienteActionPerformed

        // En el programa de Cobol hay un lío de la leche, hay cuentas de caja, de banco,
        // lía códigos de cuenta con códigos de cliente!!!
        String cuentaContable;
        int codigoCliente;
        ClienteContable cliente = new ClienteContable();

        IndiceClientesContables ic = new IndiceClientesContables();

        if (ic.getCuenta() != null) {
            // Obtenemos la cuenta contable
            cuentaContable = ic.getCuenta();
            // Obtenemos el código numerico del cliente
            codigoCliente = Integer.valueOf(String.valueOf(Integer.valueOf(cuentaContable.substring(2))));
            //Sólo mostramos el código del cliente sin el 43 de delante
            jtfnfCliente.setText(String.valueOf(codigoCliente));

            if (cuentaContable.startsWith("43")) {
                cuentaContable = String.valueOf(Integer.valueOf(cuentaContable.substring(2)));
            }

            String strSql = "SELECT * FROM CLITES WHERE EMPRESA = '"
                    + DatosComunes.eEmpresa
                    + "' AND CLITES_CLIENTE = " + codigoCliente;

            if (DatosComunes.centroCont != 0) {
                strSql += " AND CLITES_CENTRO = " + DatosComunes.centroCont;
            }

            if (cliente.read(strSql) > 0) {
                jlNombreCliente.setText(cliente.getApellidosRazonSocial());
            } else {
                jlNombreCliente.setText("");
            }

        }
    }//GEN-LAST:event_jbBuscarClienteActionPerformed

    private void jbBuscarBancoNegociacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarBancoNegociacionActionPerformed
        
        Banco banco = new Banco();
        // Saca la ventana del indice de abncos que tenemos dados de alta
        IndiceCodigosBanco indiceBanco = new IndiceCodigosBanco();
        // Obtenemos el código del banco desde el índice
        banco = indiceBanco.getBanco();
        
        // Estos una TABLA, no un INDICE, no confundirse!!!
        IndiceBancos ibs = new IndiceBancos();
        
        if(banco != null){
            jtfnfBancoNegociacion.setText(String.valueOf(banco.getBanco()));
            
            // Recordar que en el Indice de Bancos, el Banco sin número de 
            // Sucursal, es la descripción de la entidad, ej.: BBVA
            ibs.read(banco.getBanco(), 0);
            jlNombreBancoNegociacion.setText(ibs.getDescripcion());
        }
    }//GEN-LAST:event_jbBuscarBancoNegociacionActionPerformed

    private void jbBuscarBancoDomiciliacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarBancoDomiciliacionActionPerformed
        
        buscarBancoSucursal();
    }//GEN-LAST:event_jbBuscarBancoDomiciliacionActionPerformed

    private void jbBuscarSucursalDomiciliacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarSucursalDomiciliacionActionPerformed
        
        buscarBancoSucursal();
    }//GEN-LAST:event_jbBuscarSucursalDomiciliacionActionPerformed

    private void jtfnfCuentaDomiciliacionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfnfCuentaDomiciliacionFocusLost
                        
        CuentaBancaria cb = new CuentaBancaria();
        cb.setBanco(Integer.valueOf(jtfnfBancoDomiciliacion.getText().trim()));
        cb.setSucursal(Integer.valueOf(jtfnfSucursalDomiciliacion.getText().trim()));        
        cb.setDigitosControl(Integer.valueOf(jtfnfDigitosControl.getText().trim()));
        cb.setCuenta(Long.valueOf(jtfnfCuentaDomiciliacion.getText().trim()));
        
        if(cb.calculaDigitosControl().equals(jtfnfDigitosControl.getText().trim())){
            // Dígitos de control correctos.
        } else {
            Apariencia.mensajeInformativo(5, "No coinciden los dígitos de control. Deberian ser: " + cb.calculaDigitosControl());
        }
        
    }//GEN-LAST:event_jtfnfCuentaDomiciliacionFocusLost

    private void jtfnfClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfnfClienteFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfnfClienteFocusLost

    private void jbBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBorrarActionPerformed

        int fechaVencimiento, numeroEfecto, centro;

        fechaVencimiento = jtffVencimiento.getFechaAAAAMMDD();
        numeroEfecto = Integer.valueOf(jtfnfEfecto.getText());
        centro = Integer.valueOf(jtfnfCentro.getText());

        if (fechaVencimiento == 0 || numeroEfecto == 0) {
            Apariencia.mensajeInformativo(5, "Debes introducir une Fecha de Vencimiento y <br>"
                    + "Número de Efecto válidos!!!");
        } else {
            String strSql = "SELECT * FROM EFECOB WHERE EMPRESA = '"
                    + DatosComunes.eEmpresa
                    + "' AND EFECOB_VENCIM = " + fechaVencimiento + " AND EFECOB_EFECTO = " + numeroEfecto
                    + " AND EFECOB_CENTRO = " + centro;

            // Comprobramos si existe el efecto, SOLO tiene que existir uno que cumpla la condición
            if (BaseDatos.countRows(strSql) == 1) {
                efectoCobrar.read(strSql);

                // Damos la oportunidad de no borrar
                Object[] opciones = {"Si", "No"};

                int n = JOptionPane.showOptionDialog(this,
                        "<html><font size='4'><strong>"
                        + "Desea borrar el efecto con vencimiento:<BR>'"
                        + Cadena.fechaAcadena(fechaVencimiento) + "  y número de efecto: " + numeroEfecto
                        + "'</strong></font></html>",
                        "Borrar Registro",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE,
                        null, // Sin Icono personalizado.
                        opciones, // Título de los botonoes
                        opciones[1]); // Botón por defecto.

                if (n == 0) {
                    if (efectoCobrar.delete(centro, fechaVencimiento, numeroEfecto) > 0) {
                        Apariencia.mensajeInformativo(5, "Efecto borrado correctamente...");
                        // Cargamos el anterior
                        strSql = "SELECT * FROM EFECOB WHERE EMPRESA = '" + DatosComunes.eEmpresa + "' ";
                        //strSql += "AND EFECOB_CENTRO = " + jtfnfCentro.getText().trim() + " ";
                        strSql += "AND EFECOB_VENCIM = " + fechaVencimiento + " ";
                        strSql += "AND EFECOB_EFECTO < " + numeroEfecto + " ";
                        strSql += "ORDER BY EFECOB_VENCIM DESC, EFECOB_EFECTO DESC LIMIT 1";

                        if (BaseDatos.countRows(strSql) == 0) {
                            strSql = "SELECT * FROM EFECOB WHERE EMPRESA = '" + DatosComunes.eEmpresa + "' ";
                            //strSql += "AND EFECOB_CENTRO = " + jtfnfCentro.getText().trim() + " ";
                            strSql += "AND EFECOB_VENCIM < " + fechaVencimiento + " ";
                            strSql += "ORDER BY EFECOB_VENCIM DESC, EFECOB_EFECTO DESC LIMIT 1";
                        }

                        //Apariencia.mensajeInformativo(5, strSql);
                        if (BaseDatos.countRows(strSql) > 0) {
                            cargaDatos(strSql);
                        }

                    } else {
                        Apariencia.mensajeInformativo(5, "No existe este vencimiento!!!<BR>Revisarlo!!!");
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "<html><font size='4'><strong>"
                        + "No se puede borrar ese Efecto a Cobrar porque no existe!!!"
                        + "</strong></font></html>");
            }

        }

    }//GEN-LAST:event_jbBorrarActionPerformed

    private void jbDepuracionRiesgoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDepuracionRiesgoActionPerformed
        
        int anio, mes, dia;
        
        // Restamos 40 días a la fecha actual
        Fecha fechaLimite40DiasAntes = new Fecha();
        
        anio = fechaLimite40DiasAntes.getAnio();
        mes = fechaLimite40DiasAntes.getMes();
        dia = fechaLimite40DiasAntes.getDia();
        
        // Quitamos 10 dias al día
        dia -= 10;
        if(dia < 0)
            dia += 30;
        // Quitamos 1 mes al mes
        mes -= 1;
        if(mes < 1){
            // Nos hemos pasado por 'abajo', estamos en el año anterior.
            mes = 12;            
            anio--;
        }
        
        fechaLimite40DiasAntes.setAnio(anio);
        fechaLimite40DiasAntes.setMes(mes);
        fechaLimite40DiasAntes.setDia(dia);
        
        Apariencia.mensajeInformativo(5, fechaLimite40DiasAntes.fechaAcadena());
            
    }//GEN-LAST:event_jbDepuracionRiesgoActionPerformed

    private void salir() {
        this.dispose();
        frameMenu.setEnabled(true);
    }    
    
    private void borrarPantalla() {
        jtffFechaCobro.setText("");
        jtffFechaFactura.setText("");
        jtffFechaRemesa.setText("");
        jtffVencimiento.setText("");
        jtfnf2dImporte.setText("0,0");
        jtfnfBancoDomiciliacion.setText("0");
        jtfnfBancoNegociacion.setText("0");
        jtfnfCentro.setText("0");
        jtfnfCliente.setText("0");
        jtfnfCuentaDomiciliacion.setText("0");
        jtfnfDigitosControl.setText("0");
        jtfnfEfecto.setText("0");
        jtfnfFactura.setText("0");
        jtfnfRemesaDia.setText("0");
        jtfnfRepresentante.setText("0");
        jtfnfSucursalDomiciliacion.setText("0");
        jlNombreCliente.setText("");
        jlNombreRepresentante.setText("");
        jcbReciboEmitido.setSelected(false);
    }
    
    private void cargaInicial(){
        String strSql = "SELECT * FROM EFECOB WHERE EMPRESA = '" + DatosComunes.eEmpresa + "' ";
             // strSql += "AND EFECOB_CENTRO = " + DatosComunes.centroCont + " ";
             // No tenemos en cuenta el centro Contable con el que se entra. ????
              strSql += "ORDER BY EFECOB_VENCIM DESC LIMIT 1";
              
        cargaDatos(strSql);  
   
    }
    
    private void cargaDatos(String strSql){
        efectoCobrar.read(strSql);
        
        jtffFechaCobro.setText(util.Cadena.fechaAcadena(efectoCobrar.getFechaCobro()));
        jtffFechaFactura.setText(util.Cadena.fechaAcadena(efectoCobrar.getFechaFactura()));
        jtffFechaRemesa.setText(util.Cadena.fechaAcadena(efectoCobrar.getFechaRemesa()));
        jtffVencimiento.setText(util.Cadena.fechaAcadena(efectoCobrar.getVencimiento()));
        jtfnf2dImporte.setText(String.valueOf(efectoCobrar.getImporte()));
        jtfnfBancoDomiciliacion.setText(String.valueOf(efectoCobrar.getNumeroBanco()));
        jtfnfBancoNegociacion.setText(String.valueOf(efectoCobrar.getBanco()));
        jtfnfCentro.setText(String.valueOf(efectoCobrar.getCentro()));
        jtfnfCliente.setText(String.valueOf(efectoCobrar.getCuenta()));
        // Obtener el nombre de la cuenta del cliente
        Cuenta cuenta = new Cuenta();
        cuenta.read(efectoCobrar.getCuenta(), DatosComunes.centroCont);
        jlNombreCliente.setText(cuenta.getTitulo());
        
        jtfnfCuentaDomiciliacion.setText(String.valueOf(efectoCobrar.getCuentaBancaria()));
        jtfnfDigitosControl.setText(String.valueOf(efectoCobrar.getDigitosControl()));
        jtfnfEfecto.setText(String.valueOf(efectoCobrar.getEfecto()));
        jtfnfFactura.setText(String.valueOf(efectoCobrar.getFactura()));
        jtfnfRemesaDia.setText(String.valueOf(efectoCobrar.getRemesa()));
        jtfnfRepresentante.setText(String.valueOf(efectoCobrar.getRepresentante()));
        // Obtener el nombre del representante
        Representante representante = new Representante();
        representante.read(DatosComunes.eEmpresa, DatosComunes.centroCont, efectoCobrar.getRepresentante());
        jlNombreRepresentante.setText(representante.getApellidosRazonSocial());
        
        jtfnfSucursalDomiciliacion.setText(String.valueOf(efectoCobrar.getNumeroSucursal()));
        
        if(efectoCobrar.getReciboImpreso() == 1)
            jcbReciboEmitido.setSelected(true);
        else
            jcbReciboEmitido.setSelected(false);
        
        jcbxSituacion.setSelectedIndex(efectoCobrar.getSituacion());                
        
    }
    
    private void cargaPorVencimientoEfectoCentro(){
        int fechaVencimiento, numeroEfecto, centro;
        
        fechaVencimiento = jtffVencimiento.getFechaAAAAMMDD();
        numeroEfecto = Integer.valueOf(jtfnfEfecto.getText());
        centro = Integer.valueOf(jtfnfCentro.getText());
        
        if (fechaVencimiento > 0 && numeroEfecto > 0) {
            String strSql = "SELECT * FROM EFECOB WHERE EMPRESA = '" + DatosComunes.eEmpresa + "' AND ";
            strSql += "EFECOB_CENTRO = " + centro + " AND ";
            strSql += "EFECOB_VENCIM = " + fechaVencimiento + " AND ";
            strSql += "EFECOB_EFECTO = " + numeroEfecto + " LIMIT 1";

            if (BaseDatos.countRows(strSql) > 0) {
                borrarPantalla();
                cargaDatos(strSql);
            }
        }
        
    }
    
    private void cargaPorVencimientoEfectoCentro(int fechaVencimiento, int numeroEfecto, int centro){

        if (fechaVencimiento > 0 && numeroEfecto > 0) {
            String strSql = "SELECT * FROM EFECOB WHERE EMPRESA = '" + DatosComunes.eEmpresa + "' AND ";
            strSql += "EFECOB_CENTRO = " + centro + " AND ";
            strSql += "EFECOB_VENCIM = " + fechaVencimiento + " AND ";
            strSql += "EFECOB_EFECTO = " + numeroEfecto + " LIMIT 1";

            if (BaseDatos.countRows(strSql) > 0) {
                borrarPantalla();
                cargaDatos(strSql);
            }
        }
    }

    private void buscarBancoSucursal(){
        IndiceBancos indiceBancos = new IndiceBancos();        
        CuentaBancaria cb = new CuentaBancaria();

        IndiceBancosSucursales ib = new IndiceBancosSucursales();
        

        cb = ib.getBancoSucursal();

        if (cb != null) {
            if (!cb.getBanco().isEmpty()) {
                jtfnfBancoDomiciliacion.setText(cb.getBanco());
                indiceBancos.read(Integer.valueOf(cb.getBanco()), 0);
                jlNombreBancoDomiciliacion.setText(indiceBancos.getDescripcion());                
            }else{
                jtfnfBancoDomiciliacion.setText("0");
                jlNombreBancoDomiciliacion.setText("");
            }
            if (!cb.getSucursal().isEmpty()) {
                jtfnfSucursalDomiciliacion.setText(cb.getSucursal());
                indiceBancos.read(Integer.valueOf(cb.getBanco()), Integer.valueOf(cb.getSucursal()));
                jlNombreSucursalDomiciliacion.setText(indiceBancos.getDescripcion());
            }else{
                jtfnfSucursalDomiciliacion.setText("0");
                jlNombreSucursalDomiciliacion.setText("");
            }                        
        }
    }
    
    public static class MyOFocusTraversalPolicy
            extends FocusTraversalPolicy {
 
        Vector<Component> order;
 
        public MyOFocusTraversalPolicy(Vector<Component> order) {
            this.order = new Vector<Component>(order.size());
            this.order.addAll(order);
        }
 
        public Component getComponentAfter(Container focusCycleRoot,
                Component aComponent) {
            int idx = (order.indexOf(aComponent) + 1) % order.size();
            return order.get(idx);
        }
 
        public Component getComponentBefore(Container focusCycleRoot,
                Component aComponent) {
            int idx = order.indexOf(aComponent) - 1;
            if (idx < 0) {
                idx = order.size() - 1;
            }
            return order.get(idx);
        }
 
        public Component getDefaultComponent(Container focusCycleRoot) {
            return order.get(0);
        }
 
        public Component getLastComponent(Container focusCycleRoot) {
            return order.lastElement();
        }
 
        public Component getFirstComponent(Container focusCycleRoot) {
            return order.get(0);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanelDatosDomiciliacion;
    private javax.swing.JPanel jPanelDatosPrevision;
    private javax.swing.JButton jbAdelante;
    private javax.swing.JButton jbAtras;
    private javax.swing.JButton jbBorrar;
    private javax.swing.JButton jbBuscarBancoDomiciliacion;
    private javax.swing.JButton jbBuscarBancoNegociacion;
    private javax.swing.JButton jbBuscarCliente;
    private javax.swing.JButton jbBuscarFechaVencimiento;
    private javax.swing.JButton jbBuscarRepresentante;
    private javax.swing.JButton jbBuscarSucursalDomiciliacion;
    private javax.swing.JButton jbDeduccionAbonos;
    private javax.swing.JButton jbDepuracionRiesgo;
    private javax.swing.JButton jbGrabar;
    private javax.swing.JButton jbNuevo;
    private javax.swing.JButton jbSalir;
    private javax.swing.JCheckBox jcbReciboEmitido;
    private javax.swing.JComboBox jcbxSituacion;
    private javax.swing.JLabel jlBancoDomiciliacion;
    private javax.swing.JLabel jlBancoNegociacion;
    private javax.swing.JLabel jlCentro;
    private javax.swing.JLabel jlCliente;
    private javax.swing.JLabel jlCuentaDomiciliacion;
    private javax.swing.JLabel jlDigitosControl;
    private javax.swing.JLabel jlEfecto;
    private javax.swing.JLabel jlFactura;
    private javax.swing.JLabel jlFechaCobro;
    private javax.swing.JLabel jlFechaFactura;
    private javax.swing.JLabel jlFechaRemesa;
    private javax.swing.JLabel jlImporte;
    private javax.swing.JLabel jlNombreBancoDomiciliacion;
    private javax.swing.JLabel jlNombreBancoNegociacion;
    private javax.swing.JLabel jlNombreCliente;
    private javax.swing.JLabel jlNombreRepresentante;
    private javax.swing.JLabel jlNombreSucursalDomiciliacion;
    private javax.swing.JLabel jlRemesaDia;
    private javax.swing.JLabel jlRepresentante;
    private javax.swing.JLabel jlSituacion;
    private javax.swing.JLabel jlSucursalDomiciliacion;
    private javax.swing.JLabel jlVencimiento;
    private util.JTextFieldFecha jtffFechaCobro;
    private util.JTextFieldFecha jtffFechaFactura;
    private util.JTextFieldFecha jtffFechaRemesa;
    private util.JTextFieldFecha jtffVencimiento;
    private util.JTextFieldNumero2Decimales jtfnf2dImporte;
    private javax.swing.JTextField jtfnfBancoDomiciliacion;
    private javax.swing.JTextField jtfnfBancoNegociacion;
    private javax.swing.JTextField jtfnfCentro;
    private javax.swing.JTextField jtfnfCliente;
    private javax.swing.JTextField jtfnfCuentaDomiciliacion;
    private javax.swing.JTextField jtfnfDigitosControl;
    private javax.swing.JTextField jtfnfEfecto;
    private javax.swing.JTextField jtfnfFactura;
    private javax.swing.JTextField jtfnfRemesaDia;
    private javax.swing.JTextField jtfnfRepresentante;
    private javax.swing.JTextField jtfnfSucursalDomiciliacion;
    // End of variables declaration//GEN-END:variables


}

