/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mantenimientos;

import general.DatosComunes;
import indices.IndiceBancosSucursales;
import java.awt.Component;
import java.awt.Container;
import java.awt.FocusTraversalPolicy;
import java.util.Vector;
import javax.swing.JOptionPane;
import tablas.IndiceBancos;
import util.Apariencia;
import util.Cadena;
import util.CuentaBancaria;

/**
 *
 * @author Txus
 */
public class MantenimientoIndiceSucursales extends util.EscapeDialog {

    private IndiceBancos indiceBancos;
    private IndiceBancosSucursales ibs = null;
    private CuentaBancaria cuentaBancaria;
    /**
     * Creates new form ManenimientoIndiceSucursales
     */
    public MantenimientoIndiceSucursales(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        cargaInicial();
        cuentaBancaria = new CuentaBancaria();
        
        Vector<Component> order;
        order = new Vector<>(3);
        order.add(jtfnfBanco);
        order.add(jtfnfSucursal);
        order.add(jtffDireccion);
        MyOFocusTraversalPolicy newPolicy = new MyOFocusTraversalPolicy(order);
        this.setFocusTraversalPolicy(newPolicy);
        
        this.setVisible(true);
    }

    private void borrarPantalla(){
        jtfnfBanco.setText("0");        
        jtfnfSucursal.setText("0");
        jtffDireccion.setText("");
    }
    private void cargaInicial(){
        borrarPantalla();
        
        indiceBancos = new IndiceBancos();
        
        String strSql = "SELECT * FROM BCOIND WHERE EMPRESA = '" + DatosComunes.eEmpresa + "' AND "
                      + "BCOIND_BANCO > 0 AND "
                      + "BCOIND_SUCURSAL > '0000' "
                      + "ORDER BY BCOIND_BANCO ASC, BCOIND_SUCURSAL ASC LIMIT 1";
        
        indiceBancos.read(strSql);
        
        cargaDatos(indiceBancos);
    }
    
    private void cargaDatos(IndiceBancos ib){
        jtfnfBanco.setText(String.valueOf(ib.getBanco()));        
        jtfnfSucursal.setText(ib.getSucursal());
        jtffDireccion.setText(ib.getDescripcion());       
    }
    
    public static class MyOFocusTraversalPolicy
            extends FocusTraversalPolicy {

        Vector<Component> order;

        public MyOFocusTraversalPolicy(Vector<Component> order) {
            this.order = new Vector<Component>(order.size());
            this.order.addAll(order);
        }

        public Component getComponentAfter(Container focusCycleRoot,
                Component aComponent) {
            int idx = (order.indexOf(aComponent) + 1) % order.size();
            return order.get(idx);
        }

        public Component getComponentBefore(Container focusCycleRoot,
                Component aComponent) {
            int idx = order.indexOf(aComponent) - 1;
            if (idx < 0) {
                idx = order.size() - 1;
            }
            return order.get(idx);
        }

        public Component getDefaultComponent(Container focusCycleRoot) {
            return order.get(0);
        }

        public Component getLastComponent(Container focusCycleRoot) {
            return order.lastElement();
        }

        public Component getFirstComponent(Container focusCycleRoot) {
            return order.get(0);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlCodigoBanco = new javax.swing.JLabel();
        jlSucursal = new javax.swing.JLabel();
        jlDireccion = new javax.swing.JLabel();
        jtfnfBanco = new util.JTextFieldNumeroFijo(4);
        jtfnfSucursal = new util.JTextFieldNumeroFijo(4);
        jtffDireccion = new util.JTextFieldFijo(36);
        jbBuscarBanco = new javax.swing.JButton();
        jbBuscarSucursal = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();
        jbBorrar = new javax.swing.JButton();
        jbGrabar = new javax.swing.JButton();
        jbAtras = new javax.swing.JButton();
        jbAdelante = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Mantanimiento Indice de Sucursales");

        jlCodigoBanco.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jlCodigoBanco.setText("Código Banco");

        jlSucursal.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jlSucursal.setText("Sucursal");

        jlDireccion.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jlDireccion.setText("Dirección");

        jtfnfBanco.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jtfnfBanco.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfnfBancoFocusLost(evt);
            }
        });

        jtfnfSucursal.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jtfnfSucursal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfnfSucursalFocusLost(evt);
            }
        });

        jtffDireccion.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N

        jbBuscarBanco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/BUSCAR.gif"))); // NOI18N
        jbBuscarBanco.setPreferredSize(new java.awt.Dimension(30, 30));
        jbBuscarBanco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarBancoActionPerformed(evt);
            }
        });

        jbBuscarSucursal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/BUSCAR.gif"))); // NOI18N
        jbBuscarSucursal.setPreferredSize(new java.awt.Dimension(30, 30));
        jbBuscarSucursal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarSucursalActionPerformed(evt);
            }
        });

        jbSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/SALIR.gif"))); // NOI18N
        jbSalir.setPreferredSize(new java.awt.Dimension(30, 30));
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jbBorrar.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jbBorrar.setText("Borrar");
        jbBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBorrarActionPerformed(evt);
            }
        });

        jbGrabar.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        jbGrabar.setText("Grabar");
        jbGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGrabarActionPerformed(evt);
            }
        });

        jbAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Atras.gif"))); // NOI18N
        jbAtras.setPreferredSize(new java.awt.Dimension(30, 30));
        jbAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAtrasActionPerformed(evt);
            }
        });

        jbAdelante.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Adelante.gif"))); // NOI18N
        jbAdelante.setToolTipText("");
        jbAdelante.setPreferredSize(new java.awt.Dimension(30, 30));
        jbAdelante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAdelanteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbBorrar)
                        .addGap(18, 18, 18)
                        .addComponent(jbGrabar)
                        .addGap(18, 18, 18)
                        .addComponent(jbAtras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbAdelante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlCodigoBanco)
                            .addComponent(jlSucursal)
                            .addComponent(jlDireccion))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jtfnfSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbBuscarSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jtfnfBanco, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbBuscarBanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jtffDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlCodigoBanco)
                    .addComponent(jtfnfBanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscarBanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlSucursal)
                    .addComponent(jtfnfSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscarSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlDireccion)
                    .addComponent(jtffDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbAdelante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAtras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbGrabar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jbBuscarBancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarBancoActionPerformed
        if(ibs == null)
            ibs = new IndiceBancosSucursales();
        else
            ibs.setVisible(true);
        
        if(ibs.getBancoSucursal() != null){
           cuentaBancaria = ibs.getBancoSucursal();
           indiceBancos.read(Integer.valueOf(cuentaBancaria.getBanco()), 0);
           cargaDatos(indiceBancos);
        }
    }//GEN-LAST:event_jbBuscarBancoActionPerformed

    private void jbBuscarSucursalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarSucursalActionPerformed
        
        if(ibs == null)
            ibs = new IndiceBancosSucursales();
        else
            ibs.setVisible(true);
        
        if(ibs.getBancoSucursal() != null){
           cuentaBancaria = ibs.getBancoSucursal();
           
           String strSucursal = cuentaBancaria.getSucursal().trim();
           if(strSucursal.length() == 0)
               strSucursal = "    ";
           indiceBancos.read(Integer.valueOf(cuentaBancaria.getBanco()), Integer.valueOf(cuentaBancaria.getSucursal()));           
           cargaDatos(indiceBancos);
        }
    }//GEN-LAST:event_jbBuscarSucursalActionPerformed

    private void jbAdelanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAdelanteActionPerformed

        String strSql = "SELECT * FROM BCOIND WHERE EMPRESA = '" + DatosComunes.eEmpresa + "' AND "
                + "BCOIND_BANCO = " + Integer.valueOf(jtfnfBanco.getText().trim()) + " AND "
                + "BCOIND_SUCURSAL > '" + jtfnfSucursal.getText().trim() + "' "
                + "ORDER BY BCOIND_BANCO ASC, BCOIND_SUCURSAL ASC LIMIT 1";

        if (indiceBancos.read(strSql) == true) {
            cargaDatos(indiceBancos);
        } else {
            strSql = "SELECT * FROM BCOIND WHERE EMPRESA = '" + DatosComunes.eEmpresa + "' AND "
                    + "BCOIND_BANCO > " + Integer.valueOf(jtfnfBanco.getText().trim()) + " AND "
                    + "BCOIND_SUCURSAL > '0000' "
                    + "ORDER BY BCOIND_BANCO ASC, BCOIND_SUCURSAL ASC LIMIT 1";

            if (indiceBancos.read(strSql) == true) {
                cargaDatos(indiceBancos);
            }
        }

    }//GEN-LAST:event_jbAdelanteActionPerformed

    private void jbAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAtrasActionPerformed
        
        String strSql = "SELECT * FROM BCOIND WHERE EMPRESA = '" + DatosComunes.eEmpresa + "' AND "
                + "BCOIND_BANCO = " + Integer.valueOf(jtfnfBanco.getText().trim()) + " AND "
                + "BCOIND_SUCURSAL < '" + jtfnfSucursal.getText().trim() + "' AND "
                + "BCOIND_SUCURSAL > '    ' "
                + "ORDER BY BCOIND_BANCO DESC, BCOIND_SUCURSAL DESC LIMIT 1";

        if (indiceBancos.read(strSql) == true) {
            cargaDatos(indiceBancos);
        } else {
            strSql = "SELECT * FROM BCOIND WHERE EMPRESA = '" + DatosComunes.eEmpresa + "' AND "
                    + "BCOIND_BANCO < " + Integer.valueOf(jtfnfBanco.getText().trim()) + " AND "
                    + "BCOIND_SUCURSAL < '9999' AND "
                    + "BCOIND_SUCURSAL > '    ' "
                    + "ORDER BY BCOIND_BANCO DESC, BCOIND_SUCURSAL DESC LIMIT 1";

            if (indiceBancos.read(strSql) == true) {
                cargaDatos(indiceBancos);
            }
        }
    }//GEN-LAST:event_jbAtrasActionPerformed

    private void jbGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGrabarActionPerformed

        int banco, sucursal;
        String direccion;

        banco = Integer.valueOf(jtfnfBanco.getText().trim());
        direccion = jtffDireccion.getText().trim();

        if (jtfnfSucursal.getText().length() == 0) {
            sucursal = 0;
        } else {
            sucursal = Integer.valueOf(jtfnfSucursal.getText().trim());
        }

        if (indiceBancos.read(banco, 0) == false) {
            Apariencia.mensajeInformativo(4, "<center>No existe el Banco,<br>crearlo por otra pantalla!!! </center>");
        } else {
            if (sucursal > 0) {
                if (direccion.length() == 0) {
                    Apariencia.mensajeInformativo(4, "<center>Es necesaria una dirección válida!!! </center>");
                } else {
                    indiceBancos.setEmpresa(DatosComunes.eEmpresa);
                    indiceBancos.setBanco(banco);
                    indiceBancos.setSucursal(Cadena.enteroCerosIzquierda(Integer.valueOf(jtfnfSucursal.getText().trim()), 4));
                    indiceBancos.setDescripcion(jtffDireccion.getText().trim());
                    indiceBancos.setProvincia(0);
                    if (indiceBancos.write() == true) {
                        Apariencia.mensajeInformativo(4, "<center>Sucursal grabada correctamente!!! </center>");
                    }
                }
            }else{
                Apariencia.mensajeInformativo(4, "<center>Este programa es para crear las Sucursales.<br>"
                        + "Para crear los bancos debes utilizar el Mantenimiento de Bancos.</center>");
            }
        }
    }//GEN-LAST:event_jbGrabarActionPerformed

    private void jbBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBorrarActionPerformed

        int banco, sucursal;
        String direccion;

        banco = Integer.valueOf(jtfnfBanco.getText().trim());
        direccion = jtffDireccion.getText().trim();

        if (jtfnfSucursal.getText().length() == 0) {
            sucursal = 0;
        } else {
            sucursal = Integer.valueOf(jtfnfSucursal.getText().trim());
        }

        if (indiceBancos.read(banco, 0) == false) {
            Apariencia.mensajeInformativo(4, "<center>No existe el Banco!!! </center>");
        } else {
            if (sucursal > 0) {
                if (indiceBancos.read(banco, sucursal) == true) {
                    // Damos la oportunidad de no borrar
                    Object[] opciones = {"Si", "No"};

                    int n = JOptionPane.showOptionDialog(this,
                            "<html><font size='4'><strong>"
                            + "Desea borrar la sucursal<br>"
                            + "Banco     : " + indiceBancos.getBanco() + "<br>"
                            + "Sucursal  : " + indiceBancos.getSucursal() + "<br>"
                            + "Dirección : " + indiceBancos.getDescripcion(),
                            "Borrar Sucursal",
                            JOptionPane.YES_NO_OPTION,
                            JOptionPane.QUESTION_MESSAGE,
                            null, // Sin Icono personalizado.
                            opciones, // Título de los botonoes
                            opciones[1]); // Botón por defecto.
                    //Si
                    if (n == 0) {
                        if (indiceBancos.delete(banco, indiceBancos.getSucursal()) > 0) {
                            Apariencia.mensajeInformativo(4, "Sucursal borrada.");
                            
                            // Intentamos leer el siguiente registro
                            String strSql = "SELECT * FROM BCOIND WHERE EMPRESA = '" + DatosComunes.eEmpresa + "' AND "
                                    + "BCOIND_BANCO = " + Integer.valueOf(jtfnfBanco.getText().trim()) + " AND "
                                    + "BCOIND_SUCURSAL > '" + jtfnfSucursal.getText().trim() + "' "
                                    + "ORDER BY BCOIND_BANCO ASC, BCOIND_SUCURSAL ASC LIMIT 1";

                            if (indiceBancos.read(strSql) == true) {
                                cargaDatos(indiceBancos);
                            } else {
                                strSql = "SELECT * FROM BCOIND WHERE EMPRESA = '" + DatosComunes.eEmpresa + "' AND "
                                        + "BCOIND_BANCO > " + Integer.valueOf(jtfnfBanco.getText().trim()) + " AND "
                                        + "BCOIND_SUCURSAL > '0000' "
                                        + "ORDER BY BCOIND_BANCO ASC, BCOIND_SUCURSAL ASC LIMIT 1";

                                if (indiceBancos.read(strSql) == true) {
                                    cargaDatos(indiceBancos);
                                }
                            }

                        } else {
                            Apariencia.mensajeInformativo(4, "No se ha podido borrar el Banco!!!");
                        }
                    }
                }
            } else {
                Apariencia.mensajeInformativo(4, "<center>No existe la Sucursal!!!</center>");
            }
        }
    }//GEN-LAST:event_jbBorrarActionPerformed

    private void jtfnfBancoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfnfBancoFocusLost
        
        int banco = Integer.valueOf(jtfnfBanco.getText().trim());
        
        if (banco != 0) {            
            if (indiceBancos.read(banco, 0) == true) {
                cargaDatos(indiceBancos);
            } else {
                jtfnfSucursal.setText("");
                jtffDireccion.setText("");
            }
        }
    }//GEN-LAST:event_jtfnfBancoFocusLost

    private void jtfnfSucursalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfnfSucursalFocusLost

        int banco = Integer.valueOf(jtfnfBanco.getText().trim());
        int sucursal;
        String strSucursal;

        strSucursal = jtfnfSucursal.getText().trim();

        if (strSucursal.length() > 0) {
            sucursal = Integer.valueOf(strSucursal);
        } else {
            sucursal = 0;
        }

        if (banco != 0) {            
            if (indiceBancos.read(banco, sucursal) == true) {
                cargaDatos(indiceBancos);
            } else {
                jtffDireccion.setText("");
            }
        }
    }//GEN-LAST:event_jtfnfSucursalFocusLost

    
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbAdelante;
    private javax.swing.JButton jbAtras;
    private javax.swing.JButton jbBorrar;
    private javax.swing.JButton jbBuscarBanco;
    private javax.swing.JButton jbBuscarSucursal;
    private javax.swing.JButton jbGrabar;
    private javax.swing.JButton jbSalir;
    private javax.swing.JLabel jlCodigoBanco;
    private javax.swing.JLabel jlDireccion;
    private javax.swing.JLabel jlSucursal;
    private util.JTextFieldFijo jtffDireccion;
    private util.JTextFieldNumeroFijo jtfnfBanco;
    private util.JTextFieldNumeroFijo jtfnfSucursal;
    // End of variables declaration//GEN-END:variables
}
